package net.madicorp.autodoc.models;

// Generated 15 oct. 2014 10:48:29 by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.DiscriminatorColumn;
import javax.persistence.DiscriminatorType;
import javax.persistence.DiscriminatorValue;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Gabarit generated by hbm2java
 */
@Entity
@Table(name = "Gabarit", catalog = "autodocdb")
@Inheritance(strategy=InheritanceType.SINGLE_TABLE)
@DiscriminatorColumn(
	    name="GABTYPE",
	    discriminatorType=DiscriminatorType.STRING
	)
@DiscriminatorValue("FILE")
public class Gabarit implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 6015647950686777666L;
	private int idGabarit;
	private Categorie categorie;
	private String nomGabarit;
	private Set<Document> documents = new HashSet<Document>(0);

	public Gabarit() {
	}

	public Gabarit(int idGabarit, Categorie categorie) {
		this.idGabarit = idGabarit;
		this.categorie = categorie;
	}

	
	
	public Gabarit(Categorie categorie, String nomGabarit) {
		super();
		this.categorie = categorie;
		this.nomGabarit = nomGabarit;
	}

	public Gabarit(int idGabarit, Categorie categorie, String nomGabarit,
			Set<Document> documents) {
		this.idGabarit = idGabarit;
		this.categorie = categorie;
		this.nomGabarit = nomGabarit;
		this.documents = documents;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "idGabarit", unique = true, nullable = false)
	public int getIdGabarit() {
		return this.idGabarit;
	}

	public void setIdGabarit(int idGabarit) {
		this.idGabarit = idGabarit;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "Categorie_idCategorie", nullable = false)
	public Categorie getCategorie() {
		return this.categorie;
	}

	public void setCategorie(Categorie categorie) {
		this.categorie = categorie;
	}

	@Column(name = "nomGabarit", length = 65535)
	public String getNomGabarit() {
		return this.nomGabarit;
	}

	public void setNomGabarit(String nomGabarit) {
		this.nomGabarit = nomGabarit;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "gabarit")
	public Set<Document> getDocuments() {
		return this.documents;
	}

	public void setDocuments(Set<Document> documents) {
		this.documents = documents;
	}

}
